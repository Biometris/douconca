% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.dcca.r
\name{predict.dcca}
\alias{predict.dcca}
\title{Prediction for double-constrained correspondence analysis (dc-CA)}
\usage{
\method{predict}{dcca}(
  object,
  type = c("env", "traits", "response", "reg_env", "reg_traits"),
  rank = "full",
  newdata = NULL
)
}
\arguments{
\item{object}{return value of \code{\link{dc_CA}}.}

\item{type}{type of prediction, c("env", "traits","response","reg_env","reg_trait") for
environmental values, values of traits,
regression coefficients for environmenal and trait predictors.}

\item{rank}{rank or number of axes to use. Default "full" for all axes (no rank-reduction).}

\item{newdata}{An obtional data frame in which to look for variable with which to predict. If omitted,
the fitted values are generated.}
}
\description{
Prediction of traits from environment and environment from traits

With \code{type = "traits"} and \code{newdata=NULL}, predict gives the fitted mean traits,
\emph{i.e.} the fitted community weighted means.
With \code{type = "env"} and \code{newdata=NULL}, predict gives the fitted mean environment,
\emph{i.e.} the fitted species niche centroids.
}
\examples{
data("dune_trait_env")
# rownames are carried forward in results
rownames(dune_trait_env$comm) <- dune_trait_env$comm$Sites
divide <- FALSE # divide by site.totals if TRUE


cat("\n\n\n******* divide.by.site.totals ==", divide, "*******\n\n\n")
mod <- dc_CA(formulaEnv = ~A1+Moist+Mag+Use+Condition(Manure),
                   formulaTraits = ~ SLA + Height + LDMC + Condition(Seedmass) +Lifespan,
                   response = dune_trait_env$comm[, -1],  # must delete "Sites"
                   dataEnv =dune_trait_env$envir,
                   dataTraits =dune_trait_env$traits,
                   divide.by.site.totals = divide,
                   verbose = TRUE)
# regression coefficients
predict(mod,type= c("reg_env"))
predict(mod,type= c("reg_traits"))
# fit the mean traits at each site (20x6),
# that is CWM at each site, so analyse with CWMSNC version
pred.traits<- predict(mod,type = c( "traits"))
head(pred.traits)
# fit the mean environment for each species (28x8)
# that is SNC of each species
pred.env<- predict(mod,type = c( "env"))
head(pred.env)

CWMSNC <- list(CWM = pred.traits, SNC = pred.env, weights= mod$weights, data = mod$data,
               formulaEnv = mod$formulaEnv, formulaTraits = mod$formulaTraits)
CWMSNC$data$Y <- NULL

mod2 <- dc_CA(response = CWMSNC,
             divide.by.site.totals = divide,
             verbose = TRUE)


mod$eigenvalues/mod2$eigenvalues
mod2$site_axes$R2_env # perfect fit
mod2$species_axes$R2_traits # perfect fit

}
